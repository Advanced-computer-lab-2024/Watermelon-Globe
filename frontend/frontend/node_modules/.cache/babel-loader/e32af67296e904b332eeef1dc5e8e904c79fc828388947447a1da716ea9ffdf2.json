{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Farah\\\\Desktop\\\\Lab 1\\\\Watermelon-Globe\\\\frontend\\\\frontend\\\\src\\\\Components\\\\EditCompanyProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProfilePage = ({\n  profileId\n}) => {\n  _s();\n  const [profile, setProfile] = useState({\n    Name: '',\n    About: '',\n    Hotline: '',\n    Link: ''\n  });\n\n  // Fetch the current profile data when the component loads\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/profiles/${profileId}`);\n        setProfile(response.data);\n      } catch (error) {\n        console.error('Error fetching profile:', error);\n      }\n    };\n    fetchProfile();\n  }, [profileId]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfile({\n      ...profile,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create an object with only the fields that have been changed\n    const updates = {};\n    for (const key in profile) {\n      if (profile[key]) {\n        updates[key] = profile[key]; // Only include fields that are not empty\n      }\n    }\n    try {\n      await axios.put(`http://localhost:8000/profiles/${profileId}`, updates);\n      alert('Profile updated successfully!');\n    } catch (error) {\n      console.error(error);\n      alert('Error updating profile');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Name\",\n        value: profile.Name,\n        onChange: handleChange,\n        placeholder: \"Company Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"About\",\n        value: profile.About,\n        onChange: handleChange,\n        placeholder: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Hotline\",\n        value: profile.Hotline,\n        onChange: handleChange,\n        placeholder: \"Hotline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Link\",\n        value: profile.Link,\n        onChange: handleChange,\n        placeholder: \"Website Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(EditProfilePage, \"Aqn2J2vCKX/lKXBhDxvS8Mr1rg4=\");\n_c = EditProfilePage;\nexport default EditProfilePage;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","EditProfilePage","profileId","_s","profile","setProfile","Name","About","Hotline","Link","fetchProfile","response","get","data","error","console","handleChange","e","name","value","target","handleSubmit","preventDefault","updates","key","put","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Farah/Desktop/Lab 1/Watermelon-Globe/frontend/frontend/src/Components/EditCompanyProfile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst EditProfilePage = ({ profileId }) => {\r\n    const [profile, setProfile] = useState({\r\n        Name: '',\r\n        About: '',\r\n        Hotline: '',\r\n        Link: '',\r\n    });\r\n\r\n    // Fetch the current profile data when the component loads\r\n    useEffect(() => {\r\n        const fetchProfile = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8000/profiles/${profileId}`);\r\n                setProfile(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching profile:', error);\r\n            }\r\n        };\r\n\r\n        fetchProfile();\r\n    }, [profileId]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setProfile({ ...profile, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Create an object with only the fields that have been changed\r\n        const updates = {};\r\n        for (const key in profile) {\r\n            if (profile[key]) {\r\n                updates[key] = profile[key]; // Only include fields that are not empty\r\n            }\r\n        }\r\n\r\n        try {\r\n            await axios.put(`http://localhost:8000/profiles/${profileId}`, updates);\r\n            alert('Profile updated successfully!');\r\n        } catch (error) {\r\n            console.error(error);\r\n            alert('Error updating profile');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Edit Profile</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"Name\"\r\n                    value={profile.Name}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Company Name\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"About\"\r\n                    value={profile.About}\r\n                    onChange={handleChange}\r\n                    placeholder=\"About\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"Hotline\"\r\n                    value={profile.Hotline}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Hotline\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"Link\"\r\n                    value={profile.Link}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Website Link\"\r\n                />\r\n                <button type=\"submit\">Save Changes</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}