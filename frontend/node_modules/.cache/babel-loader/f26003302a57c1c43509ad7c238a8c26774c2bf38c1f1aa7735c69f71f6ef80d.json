{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem7 Courses\\\\ACL3\\\\MERN Stack\\\\frontend\\\\src\\\\pages\\\\Iteneraries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Itineraries = () => {\n  _s();\n  const [itineraries, setItineraries] = useState([]); // Initialize as an empty array\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/itineraries'); // Correct URL\n        const data = await response.json(); // Parse the response\n\n        if (response.ok) {\n          setItineraries(data); // Set state with the data\n        } else {\n          console.error(\"Failed to fetch itineraries:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching itineraries:\", error); // Catch any errors\n      }\n    };\n    fetchData();\n  }, []);\n  const handleClick = id => {\n    navigate(`/itinerary/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itineraries\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itinerary\",\n      children: itineraries.length > 0 ?\n      // Check if there are itineraries\n      itineraries.map(itinerary => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleClick(itinerary._id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: itinerary.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)\n      }, itinerary._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No itineraries found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this) // Display message if there are no itineraries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Itineraries, \"T6Y4+hW03FwTCuzpJFVANQ17n70=\", false, function () {\n  return [useNavigate];\n});\n_c = Itineraries;\nexport default Itineraries;\nvar _c;\n$RefreshReg$(_c, \"Itineraries\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Itineraries","_s","itineraries","setItineraries","navigate","fetchData","response","fetch","data","json","ok","console","error","handleClick","id","className","children","length","map","itinerary","onClick","_id","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sem7 Courses/ACL3/MERN Stack/frontend/src/pages/Iteneraries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Itineraries = () => {\r\n    const [itineraries, setItineraries] = useState([]); // Initialize as an empty array\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('/itineraries'); // Correct URL\r\n                const data = await response.json(); // Parse the response\r\n\r\n                if (response.ok) {\r\n                    setItineraries(data); // Set state with the data\r\n                } else {\r\n                    console.error(\"Failed to fetch itineraries:\", data);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching itineraries:\", error); // Catch any errors\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleClick = (id) => {\r\n        navigate(`/itinerary/${id}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"itineraries\">\r\n            <div className='itinerary'> \r\n                {itineraries.length > 0 ? ( // Check if there are itineraries\r\n                    itineraries.map((itinerary) => ( \r\n                        <div key={itinerary._id} onClick={() => handleClick(itinerary._id)}>\r\n                            <p>{itinerary.name}</p>\r\n                        </div>  \r\n                    ))\r\n                ) : (\r\n                    <p>No itineraries found.</p> // Display message if there are no itineraries\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Itineraries;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;QAC9C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;;QAEpC,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACbP,cAAc,CAACK,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,MAAM;UACHG,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEJ,IAAI,CAAC;QACvD;MACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC,CAAC,CAAC;MACzD;IACJ,CAAC;IACDP,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,WAAW,GAAIC,EAAE,IAAK;IACxBV,QAAQ,CAAC,cAAcU,EAAE,EAAE,CAAC;EAChC,CAAC;EAED,oBACIf,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,eACxBjB,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBd,WAAW,CAACe,MAAM,GAAG,CAAC;MAAK;MACxBf,WAAW,CAACgB,GAAG,CAAEC,SAAS,iBACtBpB,OAAA;QAAyBqB,OAAO,EAAEA,CAAA,KAAMP,WAAW,CAACM,SAAS,CAACE,GAAG,CAAE;QAAAL,QAAA,eAC/DjB,OAAA;UAAAiB,QAAA,EAAIG,SAAS,CAACG;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADjBP,SAAS,CAACE,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElB,CACR,CAAC,gBAEF3B,OAAA;QAAAiB,QAAA,EAAG;MAAqB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC;IAChC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACzB,EAAA,CAzCID,WAAW;EAAA,QAEIH,WAAW;AAAA;AAAA8B,EAAA,GAF1B3B,WAAW;AA2CjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}