{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem7 Courses\\\\ACL3\\\\MERN Stack\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n\n// //componetns\n// import TouristDetails from \"../components/TouristDetails\";\n\n// const Home = () => {\n//   const [tourists, setTourists] = useState(null);\n//   useEffect(() => {\n//     const fetchTourists = async () => {\n//       const response = await fetch(\"/api/tourists\");\n//       // array of tourists\n//       const json = await response.json();\n\n//       if (response.ok) {\n//         setTourists(json);\n//       }\n//     };\n\n//     fetchTourists();\n//   }, []);\n//   return (\n//     <div className=\"Home\">\n//       {/* basically what this does is that it will only map if tourists is not null */}\n//       <div className=\"tourists\">\n//         {tourists &&\n//           tourists.map((tourist) => (\n//             <TouristDetails key={tourist._id} tourist={tourist} />\n//           ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\nimport { useEffect, useState } from \"react\";\n\n// Components\nimport TouristDetails from \"../components/TouristDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [tourists, setTourists] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTourists = async () => {\n      try {\n        const response = await fetch(\"/api/tourists\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tourists\");\n        }\n        const json = await response.json();\n        setTourists(json);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTourists();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading tourists...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tourists\",\n      children: tourists && tourists.length > 0 ? tourists.map(tourist => /*#__PURE__*/_jsxDEV(TouristDetails, {\n        tourist: tourist\n      }, tourist._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No tourists available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"NJWCeKossLvVLBhdBp/O9ufo8zw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","TouristDetails","jsxDEV","_jsxDEV","Home","_s","tourists","setTourists","loading","setLoading","error","setError","fetchTourists","response","fetch","ok","Error","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","tourist","_id","_c","$RefreshReg$"],"sources":["D:/Sem7 Courses/ACL3/MERN Stack/frontend/src/pages/Home.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n\n// //componetns\n// import TouristDetails from \"../components/TouristDetails\";\n\n// const Home = () => {\n//   const [tourists, setTourists] = useState(null);\n//   useEffect(() => {\n//     const fetchTourists = async () => {\n//       const response = await fetch(\"/api/tourists\");\n//       // array of tourists\n//       const json = await response.json();\n\n//       if (response.ok) {\n//         setTourists(json);\n//       }\n//     };\n\n//     fetchTourists();\n//   }, []);\n//   return (\n//     <div className=\"Home\">\n//       {/* basically what this does is that it will only map if tourists is not null */}\n//       <div className=\"tourists\">\n//         {tourists &&\n//           tourists.map((tourist) => (\n//             <TouristDetails key={tourist._id} tourist={tourist} />\n//           ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\nimport { useEffect, useState } from \"react\";\n\n// Components\nimport TouristDetails from \"../components/TouristDetails\";\n\nconst Home = () => {\n  const [tourists, setTourists] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTourists = async () => {\n      try {\n        const response = await fetch(\"/api/tourists\");\n\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tourists\");\n        }\n\n        const json = await response.json();\n        setTourists(json);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTourists();\n  }, []);\n\n  if (loading) {\n    return <div>Loading tourists...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"Home\">\n      <div className=\"tourists\">\n        {tourists && tourists.length > 0 ? (\n          tourists.map((tourist) => (\n            <TouristDetails key={tourist._id} tourist={tourist} />\n          ))\n        ) : (\n          <div>No tourists available.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;QAE7C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC7C;QAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCV,WAAW,CAACU,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZP,QAAQ,CAACO,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRV,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAiB,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACvC;EAEA,IAAId,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAiB,QAAA,GAAK,SAAO,EAACV,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,oBACErB,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAL,QAAA,eACnBjB,OAAA;MAAKsB,SAAS,EAAC,UAAU;MAAAL,QAAA,EACtBd,QAAQ,IAAIA,QAAQ,CAACoB,MAAM,GAAG,CAAC,GAC9BpB,QAAQ,CAACqB,GAAG,CAAEC,OAAO,iBACnBzB,OAAA,CAACF,cAAc;QAAmB2B,OAAO,EAAEA;MAAQ,GAA9BA,OAAO,CAACC,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACtD,CAAC,gBAEFrB,OAAA;QAAAiB,QAAA,EAAK;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACjC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/CID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAiDV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}