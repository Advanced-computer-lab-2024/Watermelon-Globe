{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem7 Courses\\\\ACL3\\\\MERN Stack\\\\frontend\\\\src\\\\pages\\\\Iteneraries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Itineraries.css'; // Ensure you import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Itineraries = () => {\n  _s();\n  const [itineraries, setItineraries] = useState([]); // Initialize as an empty array\n  const navigate = useNavigate();\n  const itineraryContainerRef = useRef(null); // Reference for the container\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/allItineraries'); // Correct URL\n        const data = await response.json(); // Parse the response\n\n        if (response.ok) {\n          setItineraries(data); // Set state with the data\n        } else {\n          console.error(\"Failed to fetch itineraries:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching itineraries:\", error); // Catch any errors\n      }\n    };\n    fetchData();\n  }, []);\n  const handleClick = id => {\n    navigate(`/itineraryDetails/${id}`);\n  };\n  const scrollRight = () => {\n    if (itineraryContainerRef.current) {\n      itineraryContainerRef.current.scrollBy({\n        left: 300,\n        behavior: 'smooth'\n      }); // Scroll 300px to the right\n    }\n  };\n  const scrollLeft = () => {\n    if (itineraryContainerRef.current) {\n      itineraryContainerRef.current.scrollBy({\n        left: -300,\n        behavior: 'smooth'\n      }); // Scroll 300px to the left\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itineraries\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itinerary-container\",\n      ref: itineraryContainerRef,\n      children: itineraries.length > 0 ?\n      // Check if there are itineraries\n      itineraries.map(itinerary => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itinerary\",\n        onClick: () => handleClick(itinerary._id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: itinerary.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)\n      }, itinerary._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No itineraries found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this) // Display message if there are no itineraries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), itineraries.length > 0 &&\n    /*#__PURE__*/\n    // Show buttons only if there are itineraries\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"arrow-button\",\n        onClick: scrollLeft,\n        children: \"< Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"arrow-button\",\n        onClick: scrollRight,\n        children: \"Next >\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Itineraries, \"OQzcr2oHLwz4n5rFV6xJPaGLBJg=\", false, function () {\n  return [useNavigate];\n});\n_c = Itineraries;\nexport default Itineraries;\nvar _c;\n$RefreshReg$(_c, \"Itineraries\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","jsxDEV","_jsxDEV","Itineraries","_s","itineraries","setItineraries","navigate","itineraryContainerRef","fetchData","response","fetch","data","json","ok","console","error","handleClick","id","scrollRight","current","scrollBy","left","behavior","scrollLeft","className","children","ref","length","map","itinerary","onClick","_id","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sem7 Courses/ACL3/MERN Stack/frontend/src/pages/Iteneraries.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Itineraries.css'; // Ensure you import the CSS file\r\n\r\nconst Itineraries = () => {\r\n    const [itineraries, setItineraries] = useState([]); // Initialize as an empty array\r\n    const navigate = useNavigate();\r\n    const itineraryContainerRef = useRef(null); // Reference for the container\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('/allItineraries'); // Correct URL\r\n                const data = await response.json(); // Parse the response\r\n\r\n                if (response.ok) {\r\n                    setItineraries(data); // Set state with the data\r\n                } else {\r\n                    console.error(\"Failed to fetch itineraries:\", data);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching itineraries:\", error); // Catch any errors\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleClick = (id) => {\r\n       navigate(`/itineraryDetails/${id}`);\r\n    };\r\n\r\n    const scrollRight = () => {\r\n        if (itineraryContainerRef.current) {\r\n            itineraryContainerRef.current.scrollBy({ left: 300, behavior: 'smooth' }); // Scroll 300px to the right\r\n        }\r\n    };\r\n\r\n    const scrollLeft = () => {\r\n        if (itineraryContainerRef.current) {\r\n            itineraryContainerRef.current.scrollBy({ left: -300, behavior: 'smooth' }); // Scroll 300px to the left\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"itineraries\">\r\n            <div className='itinerary-container' ref={itineraryContainerRef}> \r\n                {itineraries.length > 0 ? ( // Check if there are itineraries\r\n                    itineraries.map((itinerary) => ( \r\n                        <div key={itinerary._id} className=\"itinerary\" onClick={() => handleClick(itinerary._id)}>\r\n                            <p>{itinerary.name}</p>\r\n                        </div>  \r\n                    ))\r\n                ) : (\r\n                    <p>No itineraries found.</p> // Display message if there are no itineraries\r\n                )}\r\n            </div>\r\n            {itineraries.length > 0 && ( // Show buttons only if there are itineraries\r\n                <div>\r\n                    <button className=\"arrow-button\" onClick={scrollLeft}>&lt; Previous</button>\r\n                    <button className=\"arrow-button\" onClick={scrollRight}>Next &gt;</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Itineraries;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}