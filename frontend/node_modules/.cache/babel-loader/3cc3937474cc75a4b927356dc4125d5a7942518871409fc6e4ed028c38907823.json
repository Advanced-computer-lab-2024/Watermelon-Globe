{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahd\\\\Desktop\\\\ACL3\\\\MERN Stack\\\\frontend\\\\src\\\\pages\\\\TouristSignup.js\",\n  _s = $RefreshSig$();\n// import './SignUp.css';\n// import { useState } from \"react\";\n\n// const SignupTourist = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [mobileNumber, setMobileNumber] = useState(\"\");\n//   const [nationality, setNationality] = useState(\"\");\n//   const [dob, setDOB] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const tourist = { username, email, password,mobileNumber,nationality,dob,status};\n\n//     const response = await fetch('/api/tourists', {\n//       method: 'POST',\n//       body: JSON.stringify(tourist),\n//       headers: {\n//         'Content-type': 'application/json'\n//       }\n//     });\n\n//     const json = await response; // Corrected this line\n\n//     // if (!response.ok) {\n//     //   setError(json.error); // Handle the error if response is not ok\n//     // }\n//     if (response.ok) {\n//       alert(\"Signing in as tourist was successful\");\n//       setUsername('');\n//       setEmail('');\n//       setPassword('');\n//       setMobileNumber('');\n//       setNationality('');\n//       setDOB('');\n//       setStatus('');\n//       setError(null);\n//       console.log(\"New tourist was added\", json);\n//     }\n//   };\n\n//   return (\n//     <form className=\"create\" onSubmit={handleSubmit}>\n//       <h3>Sign up</h3>\n\n//       {error && <p className=\"error\">{error}</p>} {/* Display error message if any */}\n\n//       <label> Username :\n//         <input \n//           type=\"text\"\n//           onChange={(e) => setUsername(e.target.value)}\n//           value={username}\n//         />\n//       </label>\n\n//       <label> Email :\n//         <input \n//           type=\"email\"\n//           onChange={(e) => setEmail(e.target.value)}\n//           value={email}\n//         />\n//       </label>\n\n//       <label> Password :\n//         <input \n//           type=\"password\"\n//           onChange={(e) => setPassword(e.target.value)}\n//           value={password}\n//         />\n//       </label>\n\n//       <label> Mobile Number :\n//         <input \n//           type=\"text\"\n//           onChange={(e) => setMobileNumber(e.target.value)}\n//           value={mobileNumber}\n//         />\n//       </label>\n\n//       <label> Nationality :\n//         <input \n//           type=\"text\"\n//           onChange={(e) => setNationality(e.target.value)}\n//           value={nationality}\n//         />\n//       </label>\n\n//       <label> DOB :\n//         <input \n//           type=\"date\"\n//           onChange={(e) => setDOB(e.target.value)}\n//           value={dob}\n//         />\n//       </label>\n\n//       <label> Job :\n//         <input \n//           type=\"text\"\n//           onChange={(e) => set(e.target.value)}\n//           value={status}\n//         />\n//       </label>\n\n//       <button>Sign up as tourist</button>\n//     </form>\n//   );\n// };\n\n// export default SignupTourist;\n\nimport './SignUp.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupTourist = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [mobileNumber, setMobileNumber] = useState(\"\");\n  const [nationality, setNationality] = useState(\"\");\n  const [dob, setDOB] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [errors, setErrors] = useState({}); // Object to store error messages\n\n  // Validation Functions\n  const validateUsername = () => {\n    if (username.length < 3 || username.length > 20) {\n      return \"Username must be between 3 and 20 characters.\";\n    }\n    return null;\n  };\n  const validateEmail = () => {\n    const emailRegex = /.+@.+\\..+/;\n    if (!emailRegex.test(email)) {\n      return \"Please enter a valid email address.\";\n    }\n    return null;\n  };\n  const validatePassword = () => {\n    if (password.length < 8) {\n      return \"Password must be at least 8 characters.\";\n    }\n    return null;\n  };\n  const validateMobileNumber = () => {\n    const mobileRegex = /^\\+?[0-9]{10,15}$/;\n    if (!mobileRegex.test(mobileNumber)) {\n      return \"Please enter a valid mobile number.\";\n    }\n    return null;\n  };\n  const validateDOB = () => {\n    const today = new Date();\n    const birthDate = new Date(dob);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birthDate.getDate()) {\n      age--;\n    }\n    if (age < 18) {\n      return \"You must be at least 18 years old.\";\n    }\n    return null;\n  };\n  const validateStatus = () => {\n    if (status !== \"job\" && status !== \"student\") {\n      return 'Status must be either \"job\" or \"student\".';\n    }\n    return null;\n  };\n\n  // Handle form submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Perform validation\n    const newErrors = {\n      username: validateUsername(),\n      email: validateEmail(),\n      password: validatePassword(),\n      mobileNumber: validateMobileNumber(),\n      dob: validateDOB(),\n      status: validateStatus()\n    };\n\n    // Check if there are any validation errors\n    if (Object.values(newErrors).some(error => error !== null)) {\n      setErrors(newErrors);\n      return;\n    }\n\n    // Clear errors if validation passed\n    setErrors({});\n    const tourist = {\n      username,\n      email,\n      password,\n      mobileNumber,\n      nationality,\n      dob,\n      status\n    };\n    const response = await fetch('/api/tourists', {\n      method: 'POST',\n      body: JSON.stringify(tourist),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      alert(\"Signing up as a tourist was successful\");\n      setUsername('');\n      setEmail('');\n      setPassword('');\n      setMobileNumber('');\n      setNationality('');\n      setDOB('');\n      setStatus('');\n    } else {\n      alert(\"There was an error during signup.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setUsername(e.target.value),\n        value: username,\n        className: errors.username ? 'input-error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        onChange: e => setEmail(e.target.value),\n        value: email,\n        className: errors.email ? 'input-error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password,\n        className: errors.password ? 'input-error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" Mobile Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setMobileNumber(e.target.value),\n        value: mobileNumber,\n        className: errors.mobileNumber ? 'input-error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), errors.mobileNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.mobileNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" Nationality:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setNationality(e.target.value),\n        value: nationality\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" DOB:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        onChange: e => setDOB(e.target.value),\n        value: dob,\n        className: errors.dob ? 'input-error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), errors.dob && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.dob\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" Job:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setStatus(e.target.value),\n        value: status,\n        className: errors.status ? 'input-error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), errors.status && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Sign up as tourist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupTourist, \"F0PLy2Iog8ktld8ExmjrBklBlfM=\");\n_c = SignupTourist;\nexport default SignupTourist;\nvar _c;\n$RefreshReg$(_c, \"SignupTourist\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SignupTourist","_s","username","setUsername","email","setEmail","password","setPassword","mobileNumber","setMobileNumber","nationality","setNationality","dob","setDOB","status","setStatus","errors","setErrors","validateUsername","length","validateEmail","emailRegex","test","validatePassword","validateMobileNumber","mobileRegex","validateDOB","today","Date","birthDate","age","getFullYear","monthDiff","getMonth","getDate","validateStatus","handleSubmit","e","preventDefault","newErrors","Object","values","some","error","tourist","response","fetch","method","body","JSON","stringify","headers","ok","alert","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","_c","$RefreshReg$"],"sources":["C:/Users/Shahd/Desktop/ACL3/MERN Stack/frontend/src/pages/TouristSignup.js"],"sourcesContent":["// import './SignUp.css';\r\n// import { useState } from \"react\";\r\n\r\n// const SignupTourist = () => {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [mobileNumber, setMobileNumber] = useState(\"\");\r\n//   const [nationality, setNationality] = useState(\"\");\r\n//   const [dob, setDOB] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const tourist = { username, email, password,mobileNumber,nationality,dob,status};\r\n    \r\n//     const response = await fetch('/api/tourists', {\r\n//       method: 'POST',\r\n//       body: JSON.stringify(tourist),\r\n//       headers: {\r\n//         'Content-type': 'application/json'\r\n//       }\r\n//     });\r\n    \r\n//     const json = await response; // Corrected this line\r\n\r\n//     // if (!response.ok) {\r\n//     //   setError(json.error); // Handle the error if response is not ok\r\n//     // }\r\n//     if (response.ok) {\r\n//       alert(\"Signing in as tourist was successful\");\r\n//       setUsername('');\r\n//       setEmail('');\r\n//       setPassword('');\r\n//       setMobileNumber('');\r\n//       setNationality('');\r\n//       setDOB('');\r\n//       setStatus('');\r\n//       setError(null);\r\n//       console.log(\"New tourist was added\", json);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form className=\"create\" onSubmit={handleSubmit}>\r\n//       <h3>Sign up</h3>\r\n      \r\n//       {error && <p className=\"error\">{error}</p>} {/* Display error message if any */}\r\n\r\n//       <label> Username :\r\n//         <input \r\n//           type=\"text\"\r\n//           onChange={(e) => setUsername(e.target.value)}\r\n//           value={username}\r\n//         />\r\n//       </label>\r\n\r\n//       <label> Email :\r\n//         <input \r\n//           type=\"email\"\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           value={email}\r\n//         />\r\n//       </label>\r\n\r\n//       <label> Password :\r\n//         <input \r\n//           type=\"password\"\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           value={password}\r\n//         />\r\n//       </label>\r\n\r\n//       <label> Mobile Number :\r\n//         <input \r\n//           type=\"text\"\r\n//           onChange={(e) => setMobileNumber(e.target.value)}\r\n//           value={mobileNumber}\r\n//         />\r\n//       </label>\r\n\r\n//       <label> Nationality :\r\n//         <input \r\n//           type=\"text\"\r\n//           onChange={(e) => setNationality(e.target.value)}\r\n//           value={nationality}\r\n//         />\r\n//       </label>\r\n\r\n//       <label> DOB :\r\n//         <input \r\n//           type=\"date\"\r\n//           onChange={(e) => setDOB(e.target.value)}\r\n//           value={dob}\r\n//         />\r\n//       </label>\r\n\r\n//       <label> Job :\r\n//         <input \r\n//           type=\"text\"\r\n//           onChange={(e) => set(e.target.value)}\r\n//           value={status}\r\n//         />\r\n//       </label>\r\n\r\n//       <button>Sign up as tourist</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default SignupTourist;\r\n\r\nimport './SignUp.css';\r\nimport { useState } from \"react\";\r\n\r\nconst SignupTourist = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const [nationality, setNationality] = useState(\"\");\r\n  const [dob, setDOB] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [errors, setErrors] = useState({}); // Object to store error messages\r\n\r\n  // Validation Functions\r\n  const validateUsername = () => {\r\n    if (username.length < 3 || username.length > 20) {\r\n      return \"Username must be between 3 and 20 characters.\";\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const validateEmail = () => {\r\n    const emailRegex = /.+@.+\\..+/;\r\n    if (!emailRegex.test(email)) {\r\n      return \"Please enter a valid email address.\";\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (password.length < 8) {\r\n      return \"Password must be at least 8 characters.\";\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const validateMobileNumber = () => {\r\n    const mobileRegex = /^\\+?[0-9]{10,15}$/;\r\n    if (!mobileRegex.test(mobileNumber)) {\r\n      return \"Please enter a valid mobile number.\";\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const validateDOB = () => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob);\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDiff = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n\r\n    if (age < 18) {\r\n      return \"You must be at least 18 years old.\";\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const validateStatus = () => {\r\n    if (status !== \"job\" && status !== \"student\") {\r\n      return 'Status must be either \"job\" or \"student\".';\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Handle form submit\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Perform validation\r\n    const newErrors = {\r\n      username: validateUsername(),\r\n      email: validateEmail(),\r\n      password: validatePassword(),\r\n      mobileNumber: validateMobileNumber(),\r\n      dob: validateDOB(),\r\n      status: validateStatus(),\r\n    };\r\n\r\n    // Check if there are any validation errors\r\n    if (Object.values(newErrors).some((error) => error !== null)) {\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n\r\n    // Clear errors if validation passed\r\n    setErrors({});\r\n\r\n    const tourist = { username, email, password, mobileNumber, nationality, dob, status };\r\n\r\n    const response = await fetch('/api/tourists', {\r\n      method: 'POST',\r\n      body: JSON.stringify(tourist),\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      alert(\"Signing up as a tourist was successful\");\r\n      setUsername('');\r\n      setEmail('');\r\n      setPassword('');\r\n      setMobileNumber('');\r\n      setNationality('');\r\n      setDOB('');\r\n      setStatus('');\r\n    } else {\r\n      alert(\"There was an error during signup.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"create\" onSubmit={handleSubmit}>\r\n      <h3>Sign up</h3>\r\n\r\n      <label> Username:\r\n        <input \r\n          type=\"text\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          value={username}\r\n          className={errors.username ? 'input-error' : ''}\r\n        />\r\n        {errors.username && <p className=\"error\">{errors.username}</p>}\r\n      </label>\r\n\r\n      <label> Email:\r\n        <input \r\n          type=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n          className={errors.email ? 'input-error' : ''}\r\n        />\r\n        {errors.email && <p className=\"error\">{errors.email}</p>}\r\n      </label>\r\n\r\n      <label> Password:\r\n        <input \r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          value={password}\r\n          className={errors.password ? 'input-error' : ''}\r\n        />\r\n        {errors.password && <p className=\"error\">{errors.password}</p>}\r\n      </label>\r\n\r\n      <label> Mobile Number:\r\n        <input \r\n          type=\"text\"\r\n          onChange={(e) => setMobileNumber(e.target.value)}\r\n          value={mobileNumber}\r\n          className={errors.mobileNumber ? 'input-error' : ''}\r\n        />\r\n        {errors.mobileNumber && <p className=\"error\">{errors.mobileNumber}</p>}\r\n      </label>\r\n\r\n      <label> Nationality:\r\n        <input \r\n          type=\"text\"\r\n          onChange={(e) => setNationality(e.target.value)}\r\n          value={nationality}\r\n        />\r\n      </label>\r\n\r\n      <label> DOB:\r\n        <input \r\n          type=\"date\"\r\n          onChange={(e) => setDOB(e.target.value)}\r\n          value={dob}\r\n          className={errors.dob ? 'input-error' : ''}\r\n        />\r\n        {errors.dob && <p className=\"error\">{errors.dob}</p>}\r\n      </label>\r\n\r\n      <label> Job:\r\n        <input \r\n          type=\"text\"\r\n          onChange={(e) => setStatus(e.target.value)}\r\n          value={status}\r\n          className={errors.status ? 'input-error' : ''}\r\n        />\r\n        {errors.status && <p className=\"error\">{errors.status}</p>}\r\n      </label>\r\n\r\n      <button>Sign up as tourist</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignupTourist;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}