{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem7 Courses\\\\ACL3\\\\MERN Stack\\\\frontend\\\\src\\\\pages\\\\Iteneraries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Itineraries = () => {\n  _s();\n  const [itineraries, setItineraries] = useState([]); // Initialize as an empty array\n  const [currentPage, setCurrentPage] = useState(0); // Track the current page\n  const itemsPerPage = 5; // Number of itineraries to display per page\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/allItineraries'); // Correct URL\n        const data = await response.json(); // Parse the response\n\n        if (response.ok) {\n          setItineraries(data); // Set state with the data\n        } else {\n          console.error(\"Failed to fetch itineraries:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching itineraries:\", error); // Catch any errors\n      }\n    };\n    fetchData();\n  }, []);\n  const handleClick = id => {\n    navigate(`/itineraryDetails/${id}`);\n  };\n\n  // Calculate the current itineraries to display\n  const currentItineraries = itineraries.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage);\n  const totalPages = Math.ceil(itineraries.length / itemsPerPage); // Total number of pages\n\n  const handleNext = () => {\n    if (currentPage < totalPages - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itineraries\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itinerary\",\n      children: currentItineraries.length > 0 ?\n      // Check if there are itineraries\n      currentItineraries.map(itinerary => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleClick(itinerary._id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: itinerary.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)\n      }, itinerary._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No itineraries found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this) // Display message if there are no itineraries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        disabled: currentPage === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" Page \", currentPage + 1, \" of \", totalPages, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentPage >= totalPages - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Itineraries, \"obBnZRhQTxSvhXfYNiXkYTje6SQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Itineraries;\nexport default Itineraries;\nvar _c;\n$RefreshReg$(_c, \"Itineraries\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Itineraries","_s","itineraries","setItineraries","currentPage","setCurrentPage","itemsPerPage","navigate","fetchData","response","fetch","data","json","ok","console","error","handleClick","id","currentItineraries","slice","totalPages","Math","ceil","length","handleNext","handlePrevious","className","children","map","itinerary","onClick","_id","name","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["D:/Sem7 Courses/ACL3/MERN Stack/frontend/src/pages/Iteneraries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Itineraries = () => {\r\n    const [itineraries, setItineraries] = useState([]); // Initialize as an empty array\r\n    const [currentPage, setCurrentPage] = useState(0); // Track the current page\r\n    const itemsPerPage = 5; // Number of itineraries to display per page\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('/allItineraries'); // Correct URL\r\n                const data = await response.json(); // Parse the response\r\n\r\n                if (response.ok) {\r\n                    setItineraries(data); // Set state with the data\r\n                } else {\r\n                    console.error(\"Failed to fetch itineraries:\", data);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching itineraries:\", error); // Catch any errors\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleClick = (id) => {\r\n        navigate(`/itineraryDetails/${id}`);\r\n    };\r\n\r\n    // Calculate the current itineraries to display\r\n    const currentItineraries = itineraries.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage);\r\n    const totalPages = Math.ceil(itineraries.length / itemsPerPage); // Total number of pages\r\n\r\n    const handleNext = () => {\r\n        if (currentPage < totalPages - 1) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    const handlePrevious = () => {\r\n        if (currentPage > 0) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"itineraries\">\r\n            <div className='itinerary'>\r\n                {currentItineraries.length > 0 ? ( // Check if there are itineraries\r\n                    currentItineraries.map((itinerary) => (\r\n                        <div key={itinerary._id} onClick={() => handleClick(itinerary._id)}>\r\n                            <p>{itinerary.name}</p>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No itineraries found.</p> // Display message if there are no itineraries\r\n                )}\r\n            </div>\r\n            <div className=\"pagination\">\r\n                <button onClick={handlePrevious} disabled={currentPage === 0}>Previous</button>\r\n                <span> Page {currentPage + 1} of {totalPages} </span>\r\n                <button onClick={handleNext} disabled={currentPage >= totalPages - 1}>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Itineraries;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}