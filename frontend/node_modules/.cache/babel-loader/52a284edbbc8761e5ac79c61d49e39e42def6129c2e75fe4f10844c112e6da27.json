{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem7 Courses\\\\ACL3\\\\MERN Stack\\\\frontend\\\\src\\\\pages\\\\Iteneraries.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const Itineraries = () => {\n//     const [itineraries, setItineraries] = useState([]);\n//     const [currentPage, setCurrentPage] = useState(0);\n//     const itemsPerPage = 5;\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 const response = await fetch('/allItineraries');\n//                 const data = await response.json();\n//                 if (response.ok) {\n//                     setItineraries(data);\n//                 } else {\n//                     console.error(\"Failed to fetch itineraries:\", data);\n//                 }\n//             } catch (error) {\n//                 console.error(\"Error fetching itineraries:\", error);\n//             }\n//         };\n//         fetchData();\n//     }, []);\n\n//     const handleClick = (id) => {\n//         navigate(`/itineraryDetails/${id}`);\n//     };\n\n//     const currentItineraries = itineraries.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage);\n//     const totalPages = Math.ceil(itineraries.length / itemsPerPage);\n\n//     const handleNext = () => {\n//         if (currentPage < totalPages - 1) {\n//             setCurrentPage(currentPage + 1);\n//         }\n//     };\n\n//     const handlePrevious = () => {\n//         if (currentPage > 0) {\n//             setCurrentPage(currentPage - 1);\n//         }\n//     };\n\n//     return (\n//         <div className=\"itineraries\">\n//             <div className=\"itinerary-container\">\n//                 {currentItineraries.length > 0 ? (\n//                     currentItineraries.map((itinerary) => (\n//                         <div key={itinerary._id} className=\"itinerary-box\" onClick={() => handleClick(itinerary._id)}>\n//                             <p>{itinerary.name}</p>\n//                         </div>\n//                     ))\n//                 ) : (\n//                     <p>No itineraries found.</p>\n//                 )}\n//             </div>\n//             <div className=\"pagination\">\n//                 <button className=\"arrow-button\" onClick={handlePrevious} disabled={currentPage === 0}>Previous</button>\n//                 <span> Page {currentPage + 1} of {totalPages} </span>\n//                 <button className=\"arrow-button\" onClick={handleNext} disabled={currentPage >= totalPages - 1}>Next</button>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Itineraries;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Itineraries = () => {\n  _s();\n  const [itineraries, setItineraries] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const itemsPerPage = 5;\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/allItineraries');\n        const data = await response.json();\n        if (response.ok) {\n          setItineraries(data);\n        } else {\n          console.error(\"Failed to fetch itineraries:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching itineraries:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleClick = id => {\n    navigate(`/itineraryDetails/${id}`);\n  };\n  const currentItineraries = itineraries.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage);\n  const totalPages = Math.ceil(itineraries.length / itemsPerPage);\n  const handleNext = () => {\n    if (currentPage < totalPages - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itineraries\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itinerary-container\",\n      children: currentItineraries.length > 0 ? currentItineraries.map(itinerary => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"req\",\n        onClick: () => handleClick(itinerary._id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"req-img-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: itinerary.image || '/default-image.jpg',\n            alt: itinerary.name,\n            className: \"req-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"req-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"req-org-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: itinerary.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"More Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"req-desc\",\n            children: itinerary.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"req-type\",\n            children: itinerary.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }, this)]\n      }, itinerary._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No itineraries found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"arrow-button\",\n        onClick: handlePrevious,\n        disabled: currentPage === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" Page \", currentPage + 1, \" of \", totalPages, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"arrow-button\",\n        onClick: handleNext,\n        disabled: currentPage >= totalPages - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(Itineraries, \"obBnZRhQTxSvhXfYNiXkYTje6SQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Itineraries;\nexport default Itineraries;\nvar _c;\n$RefreshReg$(_c, \"Itineraries\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Itineraries","_s","itineraries","setItineraries","currentPage","setCurrentPage","itemsPerPage","navigate","fetchData","response","fetch","data","json","ok","console","error","handleClick","id","currentItineraries","slice","totalPages","Math","ceil","length","handleNext","handlePrevious","className","children","map","itinerary","onClick","_id","src","image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","description","type","disabled","_c","$RefreshReg$"],"sources":["D:/Sem7 Courses/ACL3/MERN Stack/frontend/src/pages/Iteneraries.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Itineraries = () => {\r\n//     const [itineraries, setItineraries] = useState([]);\r\n//     const [currentPage, setCurrentPage] = useState(0);\r\n//     const itemsPerPage = 5;\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             try {\r\n//                 const response = await fetch('/allItineraries');\r\n//                 const data = await response.json();\r\n//                 if (response.ok) {\r\n//                     setItineraries(data);\r\n//                 } else {\r\n//                     console.error(\"Failed to fetch itineraries:\", data);\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error(\"Error fetching itineraries:\", error);\r\n//             }\r\n//         };\r\n//         fetchData();\r\n//     }, []);\r\n\r\n//     const handleClick = (id) => {\r\n//         navigate(`/itineraryDetails/${id}`);\r\n//     };\r\n\r\n//     const currentItineraries = itineraries.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage);\r\n//     const totalPages = Math.ceil(itineraries.length / itemsPerPage);\r\n\r\n//     const handleNext = () => {\r\n//         if (currentPage < totalPages - 1) {\r\n//             setCurrentPage(currentPage + 1);\r\n//         }\r\n//     };\r\n\r\n//     const handlePrevious = () => {\r\n//         if (currentPage > 0) {\r\n//             setCurrentPage(currentPage - 1);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"itineraries\">\r\n//             <div className=\"itinerary-container\">\r\n//                 {currentItineraries.length > 0 ? (\r\n//                     currentItineraries.map((itinerary) => (\r\n//                         <div key={itinerary._id} className=\"itinerary-box\" onClick={() => handleClick(itinerary._id)}>\r\n//                             <p>{itinerary.name}</p>\r\n//                         </div>\r\n//                     ))\r\n//                 ) : (\r\n//                     <p>No itineraries found.</p>\r\n//                 )}\r\n//             </div>\r\n//             <div className=\"pagination\">\r\n//                 <button className=\"arrow-button\" onClick={handlePrevious} disabled={currentPage === 0}>Previous</button>\r\n//                 <span> Page {currentPage + 1} of {totalPages} </span>\r\n//                 <button className=\"arrow-button\" onClick={handleNext} disabled={currentPage >= totalPages - 1}>Next</button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Itineraries;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Itineraries = () => {\r\n    const [itineraries, setItineraries] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const itemsPerPage = 5;\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('/allItineraries');\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    setItineraries(data);\r\n                } else {\r\n                    console.error(\"Failed to fetch itineraries:\", data);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching itineraries:\", error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleClick = (id) => {\r\n        navigate(`/itineraryDetails/${id}`);\r\n    };\r\n\r\n    const currentItineraries = itineraries.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage);\r\n    const totalPages = Math.ceil(itineraries.length / itemsPerPage);\r\n\r\n    const handleNext = () => {\r\n        if (currentPage < totalPages - 1) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    const handlePrevious = () => {\r\n        if (currentPage > 0) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"itineraries\">\r\n            <div className=\"itinerary-container\">\r\n                {currentItineraries.length > 0 ? (\r\n                    currentItineraries.map((itinerary) => (\r\n                        <div key={itinerary._id} className=\"req\" onClick={() => handleClick(itinerary._id)}>\r\n                            <div className=\"req-img-container\">\r\n                                <img src={itinerary.image || '/default-image.jpg'} alt={itinerary.name} className=\"req-img\" />\r\n                            </div>\r\n                            <div className=\"req-info\">\r\n                                <div className=\"req-org-name\">\r\n                                    <p>{itinerary.name}</p>\r\n                                    <button>More Info</button>\r\n                                </div>\r\n                                <hr />\r\n                                <p className=\"req-desc\">{itinerary.description}</p>\r\n                                <p className=\"req-type\">{itinerary.type}</p>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No itineraries found.</p>\r\n                )}\r\n            </div>\r\n            <div className=\"pagination\">\r\n                <button className=\"arrow-button\" onClick={handlePrevious} disabled={currentPage === 0}>Previous</button>\r\n                <span> Page {currentPage + 1} of {totalPages} </span>\r\n                <button className=\"arrow-button\" onClick={handleNext} disabled={currentPage >= totalPages - 1}>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Itineraries;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}